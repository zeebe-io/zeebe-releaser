{
  "schemaVersion": 2,
  "components": [
    {
      "label": "Current release process",
      "type": "textfield",
      "id": "Field_1nljf6y",
      "key": "release_version"
    },
    {
      "text": "# Create release branch\nThe first step is to freeze the code that will be used to build the release. In order to do so, first check out the branch against which we will base the new release branch. In the case of an ALPHA or MINOR release, this will be `main`. In the case of a PATCH release, this will be `stable/MAJOR.MINOR`, where `MAJOR.MINOR` is the version we want to build a patch release for. \n\n### Patch release\n```sh\ngit checkout stable/MAJOR.MINOR\ngit fetch --all\ngit rebase\ngit checkout -b release-MAJOR.MINOR.PATCH\ngit push -u origin release-MAJOR.MINOR.PATCH\n```\n\n### Major, minor, and alpha release\n```sh\ngit checkout main\ngit fetch --all\ngit rebase\ngit checkout -b release-MAJOR.MINOR.PATCH\ngit push -u origin release-MAJOR.MINOR.PATCH\n```\n  \nThis allows us to continue the development without adding unstable features to the release. While the code is frozen, it's still possible to back port and/or cherry-pick bug fixes into the release branch. For everything else (e.g. refactoring, clean up, features), the rule of thumb is not to do it, but it can be decided on a case-by-case basis with the tech lead.",
      "type": "text",
      "id": "Field_1qa89tn"
    },
    {
      "label": "Release branch name",
      "type": "textfield",
      "id": "Field_0ydc4a9",
      "key": "release_branch_name",
      "validate": {
        "required": true
      }
    }
  ],
  "type": "default",
  "id": "zeebe_release_branch"
}