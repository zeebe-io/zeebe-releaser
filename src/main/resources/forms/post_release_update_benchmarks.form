{
  "components": [
    {
      "label": "Current release process",
      "type": "textfield",
      "id": "Field_1nljf6y",
      "key": "release_version"
    },
    {
      "text": "# Update benchmarks\nAs part of our continuous testing efforts, we also run long running load tests for the various supported versions:\n\n- One benchmark for each supported minor version (updated to their latest patch release), e.g. `release-1-1-x` and `release-1-0-x`\n- One benchmark for the latest alpha version, e.g. `release-1-2-0-alpha1`\n\nOnce a new version is released, we need to update all of these benchmarks depending on the release type. _Only execute the steps below for the release type that you are performing!_\n\nLong running benchmark deployments can be found in the main repository by checking out the branch `medic-cw-benchmarks`, under `benchmarks/setup`. There you will find a folder with the name of the benchmark. Each release benchmark is prefixed with `release-`, and then the version _with dashes instead of periods as separator_, e.g. `release-1-0` or `release-2-3-1-alpha1`. [See our documentation for more](https://github.com/camunda-cloud/zeebe/tree/develop/benchmarks/setup).\n\nAs a first step, checkout this branch and navigate there. Then set the Kubernetes context to the long running cluster, where the long running load tests live.\n\n```sh\ngit checkout medic-cw-benchmarks\ncd benchmarks/setup\nkubectx gke_zeebe-io_europe-west1-b_zeebe-long-running\n```\n\n#### ALPHA\n\nIf performing an alpha release, the first step is to remove the load test for the previous alpha release. From the `benchmarks/setup` folder, we can use the script `./deleteBenchmark.sh` for this.\n\n```sh\n./deleteBenchmark.sh release-MAJOR-MINOR-0-ALPHA\n```\n\nFor example, if you're releasing `1.2.0-alpha2`, then you would be deleting the previous `1.2.0-alpha1` benchmark, e.g. `./deleteBenchmark release-1-2-0-alpha1`.\n\nRemember to commit the deleted files\n\n```sh\ngit add release-MAJOR-MINOR-ALPHA\ngit commit -m \"test(benchmark): rm release-MAJOR-MINOR-PATH-ALPHA\"\ngit push\n```\n\nOnce done, we need to create a new benchmark for your version.\n\n```sh\n./newBenchmark.sh release-MAJOR-MINOR-PATCH-ALPHA\n```\n\nThen update the Zeebe, worker, and starter image tags, which are set to `SNAPSHOT` by default. Navigate to your benchmark folder, and from there simply run (replace `NEW_VERSION` with your version):\n- macOS: `sed -i '' 's/SNAPSHOT/NEW_VERSION/g' ./*`\n- Other: `sed -i 's/SNAPSHOT/NEW_VERSION/g' ./*`\n\nThen start the benchmark. Verify that it's running properly by [checking the long-running Grafana](http://35.189.240.202)\n\n```sh\nmake zeebe worker starter\n```\n\n#### PATCH\n\nIf performing a patch release, simply update the existing benchmark for the same minor version. This means, if you are releasing 1.1.2, then you would update the existing `release-1-1-x` benchmark. To update a benchmark, navigate to the existing benchmark folder (in our example, you would go to `release-1-1-x`). From there, update the Zeebe image tag.\n\n1. Check the current `image.tag` in `zeebe-values.yaml`\n2. Replace the version with the next in all files (replace `OLD_VERSION` and `NEW_VERSION` with the actual versions):\n2. - macOS: `sed -i '' 's/OLD_VERSION/NEW_VERSION/g' ./*`\n2. - Other: `sed -i 's/OLD_VERSION/NEW_VERSION/g' ./*`\n\nAfterwards, we need to update the Helm release by running the following. Be sure the update the version in the release name, e.g. `release-1-1-x`.\n\n```sh\nmake update\nmake worker starter\n```\n\nVerify that it's running properly by [checking the long-running Grafana](http://35.189.240.202)\n\n#### MINOR\n\nIf you're performing a minor release, the first step is to delete the oldest minor load test - that is, for the version which will stop being supported. From the `benchmarks/setup` folder, we can use the script `./deleteBenchmark.sh` for this.\n\n```sh\n./deleteBenchmark.sh release-MAJOR-MINOR-x\n```\n\nWe currently support 2 minor versions. So if you're releasing `1.2.0`, then you would be deleting the previous `1.0.x` benchmark, e.g. `./deleteBenchmark release-1-0-x`.\n\nRemember to commit the deleted files\n\n```sh\ngit add release-MAJOR-MINOR-ALPHA\ngit commit -m \"test(benchmark): rm release-MAJOR-MINOR-x\"\ngit push\n```\n\nOnce done, we need to create a new benchmark for your version.\n\n```sh\n./newBenchmark.sh release-MAJOR-MINOR-x\n```\n\nThen update the Zeebe, worker, and starter image tags, which are set to `SNAPSHOT` by default. Navigate to your benchmark folder, and from there simply run (replacing `NEW_VERSION` with your version):\n- macOS: `sed -i '' 's/SNAPSHOT/NEW_VERSION/g' ./*`\n- Other: `sed -i 's/SNAPSHOT/NEW_VERSION/g' ./*`\n\nThen start the benchmark.\n\n```sh\nmake zeebe worker starter\n```\n\nVerify that it's running properly by [checking the long-running Grafana](http://35.189.240.202)\n\n#### Commit the benchmark files\n\nAt the end, when the benchmark is running correctly, remember to commit the benchmark setup files.\n\n```sh\ngit add release-MAJOR-MINOR-ALPHA\ngit commit -m \"test(benchmark): add release-MAJOR.MINOR.PATCH(.ALPHA)\"\ngit push\n```",
      "type": "text",
      "id": "Field_1rfqdzy"
    }
  ],
  "schemaVersion": 4,
  "type": "default",
  "id": "Form_0qq681s",
  "exporter": {
    "name": "Camunda Modeler",
    "version": "5.1.0"
  }
}