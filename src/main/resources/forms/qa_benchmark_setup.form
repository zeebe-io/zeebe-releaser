{
  "schemaVersion": 2,
  "components": [
    {
      "label": "Current release process",
      "type": "textfield",
      "id": "Field_1nljf6y",
      "key": "release_version"
    },
    {
      "text": "# Set up a new benchmark for the release branch\n\nSet up a long running benchmark for the release branch. This lets us observe stability and performance changes over a longer period of time than the tests would typically show. For minor and alpha releases, we can use the medic benchmarks as baseline for comparison.\n\nTo do so, checkout your release branch (if you haven't already), and navigate to the root of the project. We will use the `createBenchmark.sh` script found at the root of the project. [Make sure you've already followed the instructions on how to setup a benchmark once, and have all the tools prepared](https://github.com/camunda-cloud/zeebe/tree/develop/benchmarks).\n\nThis script does the following:\n\n1. Build the current branch\n2. Build the docker dev image\n3. Publish the docker image\n4. Sets up a new namespace\n5. Configures the benchmark\n6. Deploys the benchmark\n\n> **NOTE**: if you have saved the zeebe-cluster context with a different name, update the `kubectx` command below for it. The important part is to ensure you are on the right context, as the script below will create Kubernetes resources.\n\n```sh\nkubectx gke_zeebe-io_europe-west1-b_zeebe-cluster\n./createBenchmark.sh release-MAJOR-MINOR-PATCH-ALPHA\n```\n\nThe whole thing should take a few minutes to start. Verify that it is started by checking the [Grafana instance](http://34.77.165.228) for your namespace.\n\nAs release manager, you should then monitor that benchmark daily until the release day, and react to any strange behavior and/or failures. Consult the team if unsure whether something is a release blocker or not.",
      "type": "text",
      "id": "Field_0nu869f"
    },
    {
      "label": "Name",
      "type": "textfield",
      "id": "Field_0r35pcc",
      "key": "qa_benchmark_name",
      "description": "Kubernetes namespace",
      "validate": {
        "required": true
      }
    }
  ],
  "type": "default",
  "id": "qa_benchmark_setup",
  "executionPlatform": "Camunda Cloud",
  "executionPlatformVersion": "1.2"
}